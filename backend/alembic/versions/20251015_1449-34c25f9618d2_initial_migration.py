"""initial_migration

Revision ID: 34c25f9618d2
Revises: 
Create Date: 2025-10-15 14:49:28.270384

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "34c25f9618d2"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("user",
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("updated_at", sa.DateTime(), nullable=False),
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column("role", sa.Enum("EMPLOYEE", "HR", name="userrole"), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint("id")
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_id"), ["id"], unique=False)

    op.create_table("fichaje",
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("updated_at", sa.DateTime(), nullable=False),
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("user_id", sa.Integer(), nullable=False),
    sa.Column("check_in", sa.DateTime(), nullable=False),
    sa.Column("check_out", sa.DateTime(), nullable=True),
    sa.Column("status", sa.Enum("VALID", "PENDING_CORRECTION", "CORRECTED", "REJECTED", name="fichajestatus"), nullable=False),
    sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column("correction_reason", sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column("correction_requested_at", sa.DateTime(), nullable=True),
    sa.Column("approved_by", sa.Integer(), nullable=True),
    sa.Column("approved_at", sa.DateTime(), nullable=True),
    sa.Column("approval_notes", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(["approved_by"], ["user.id"], ),
    sa.ForeignKeyConstraint(["user_id"], ["user.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    with op.batch_alter_table("fichaje", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_fichaje_check_in"), ["check_in"], unique=False)
        batch_op.create_index(batch_op.f("ix_fichaje_check_out"), ["check_out"], unique=False)
        batch_op.create_index(batch_op.f("ix_fichaje_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_fichaje_user_id"), ["user_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("fichaje", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_fichaje_user_id"))
        batch_op.drop_index(batch_op.f("ix_fichaje_id"))
        batch_op.drop_index(batch_op.f("ix_fichaje_check_out"))
        batch_op.drop_index(batch_op.f("ix_fichaje_check_in"))

    op.drop_table("fichaje")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_email"))

    op.drop_table("user")
    # ### end Alembic commands ###
